{
  "Different conditional rendering ways": {
    "prefix": "r_conditions",
    "body": [
      "",
      "//if else condition",
      "  exampleFunction() {",
      "    if(this.state.mode === 'view') {",
      "      return <div></div>;",
      "    } else {",
      "      return (",
      "          <p>",
      "            <input",
      "              onChange={this.handleChange}",
      "              value={this.state.inputText}",
      "            />",
      "          </p>",
      "      );",
      "    }",
      "  }",
      "",
      "  render () {",
      "    return (",
      "        {this.exampleFunction()}",
      "    );",
      "  }",
      "}",
      "",
      "// Ternary operator",
      "//condition ? expr_if_true : expr_if_false",
      "",
      "return (",
      "      <div>",
      "        <p>Text: {this.state.text}</p>",
      "        ",
      "        {",
      "          view",
      "          ? null",
      "          : (",
      "            <p>",
      "              <input",
      "                onChange={this.handleChange}",
      "                value={this.state.inputText} />",
      "            </p>",
      "          )",
      "        }",
      "",
      "      </div>",
      "  );",
      "",
      "// AND operator",
      "",
      "return (",
      "    <div>",
      "        { showHeader && <Header /> }",
      "    </div>",
      ");",
      "",
      "// SubComponent",
      "",
      "render () {",
      "    const view = this.state.mode === 'view';",
      "    ",
      "    return (",
      "      <div>",
      "        <p>Text: {this.state.text}</p>",
      "        ",
      "        {",
      "          view",
      "            ? <EditComponent handleEdit={this.handleEdit}  />",
      "            : (",
      "              <SaveComponent ",
      "               handleChange={this.handleChange}",
      "               handleSave={this.handleSave}",
      "               text={this.state.inputText}",
      "             />",
      "            )",
      "        } ",
      "      </div>",
      "    );",
      "}",
      "",
      "// Element variables",
      "",
      "  renderButton() {",
      "    let button;",
      "    ",
      "    if(this.state.mode === 'view') {",
      "      button =",
      "          <button onClick={this.handleEdit}>",
      "            Edit",
      "          </button>;",
      "    } else {",
      "      button =",
      "          <button onClick={this.handleSave}>",
      "            Save",
      "          </button>;",
      "    }",
      "    ",
      "    return button;",
      "  }"
    ],
    "description": "constructor generator"
  }
}